<dtml-call expr="REQUEST.set('cod_ult_tramitacao', '')">
<dtml-call expr="REQUEST.set('ind_ult_tramitacao', '')">
<dtml-call expr="REQUEST.set('use_spdo', sapl_documentos.props_sapl.use_spdo)">
<dtml-if hdn_cod_tramitacao>
    <dtml-call expr="REQUEST.set('metodo', zsql.tramitacao_atualizar_zsql)">
    <dtml-else>
    <dtml-in expr="zsql.tramitacao_obter_zsql(cod_materia=hdn_cod_materia, ind_ult_tramitacao=1)">
        <dtml-call expr="REQUEST.set('cod_ult_tramitacao', cod_tramitacao)">
    </dtml-in>

    <dtml-call expr="REQUEST.set('ind_ult_tramitacao', '1')">

    <dtml-call expr="REQUEST.set('metodo', zsql.tramitacao_incluir_zsql)">
</dtml-if>

<dtml-try>
    <dtml-call expr="zsql.trans_begin_zsql()">
    <dtml-if use_spdo>
        <dtml-if expr="not hdn_cod_tramitacao">
        <dtml-call expr="pysc.spdo_tramitacao_add_salvar_pysc(
                                                         cod_materia=hdn_cod_materia,
                                                         cod_unid_tram_dest = lst_cod_unid_tram_dest,
                                                         txt_tramitacao = txa_txt_tramitacao)">
        <dtml-call expr="REQUEST.set('txa_txt_tramitacao', txa_txt_tramitacao + ' a matéria foi encaminhada e encontra-se pendente de recebimento pelo destinatário')">
        </dtml-if>
        <dtml-in expr="zsql.apenso_obter_zsql(cod_materia_principal=hdn_cod_materia)">
            <dtml-call expr="metodo(
                cod_tramitacao  = hdn_cod_tramitacao,
                cod_materia = cod_materia_apensada,
                dat_tramitacao = pysc.data_converter_pysc(data=hdn_dat_tramitacao),
                cod_unid_tram_local = lst_cod_unid_tram_local,
                dat_encaminha = pysc.data_converter_pysc(data=txt_dat_encaminha),
                cod_unid_tram_dest = lst_cod_unid_tram_dest,
                cod_status = lst_cod_status,
                ind_urgencia = rad_ind_urgencia,
                sgl_turno = lst_sgl_turno,
                txt_tramitacao = txa_txt_tramitacao,
                dat_fim_prazo = pysc.data_converter_pysc(data=txt_dat_fim_prazo),
                ind_ult_tramitacao = ind_ult_tramitacao)">
        </dtml-in>
    </dtml-if>

    <dtml-call expr="metodo(
        cod_tramitacao  = hdn_cod_tramitacao,
        cod_materia = hdn_cod_materia,
        dat_tramitacao = pysc.data_converter_pysc(data=hdn_dat_tramitacao),
        cod_unid_tram_local = lst_cod_unid_tram_local,
        dat_encaminha = pysc.data_converter_pysc(data=txt_dat_encaminha),
        cod_unid_tram_dest = lst_cod_unid_tram_dest,
        cod_status = lst_cod_status,
        ind_urgencia = rad_ind_urgencia,
        sgl_turno = lst_sgl_turno,
        txt_tramitacao = txa_txt_tramitacao,
        dat_fim_prazo = pysc.data_converter_pysc(data=txt_dat_fim_prazo),
        ind_ult_tramitacao = ind_ult_tramitacao)">

    <dtml-if cod_ult_tramitacao>
        <dtml-call expr="zsql.tramitacao_ind_ultima_atualizar_zsql(cod_tramitacao  = cod_ult_tramitacao,
                                                               ind_ult_tramitacao = 0)">
    </dtml-if>
    <dtml-call expr="pysc.atualiza_indicador_tramitacao_materia_pysc(cod_materia=hdn_cod_materia, cod_status=lst_cod_status)">
    <dtml-call expr="zsql.trans_commit_zsql()">

    <dtml-except>
        <dtml-call expr="zsql.trans_rollback_zsql()">

        <dtml-let mensagem="'Houve um erro no banco de dados.'">
            <dtml-var mensagem_emitir>
        </dtml-let>

        <dtml-else>
        <dtml-if use_spdo>
        <dtml-let mensagem="'Tramitação salva com sucesso! O protocolo precisa ser recebido pela unidade de destino!'" sucesso="1" url="'index_html?cod_materia=' + hdn_cod_materia">
            <dtml-var mensagem_emitir>
        </dtml-let>
        <dtml-else>
        <dtml-let mensagem="'Tramitação salva com sucesso!'" sucesso="1" url="'index_html?cod_materia=' + hdn_cod_materia">
            <dtml-var mensagem_emitir>
        </dtml-let>
        </dtml-if>

        <dtml-call expr="pysc.envia_acomp_materia_pysc(cod_materia=hdn_cod_materia)">

</dtml-try>